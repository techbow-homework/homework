/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode plusOne(ListNode head) {
        if(head == null) return new ListNode(1);
        ListNode reversed = reverse(head);
        ListNode curr = reversed;
        while(curr!= null && curr.val + 1 == 10){
            curr.val =0;
            curr= curr.next;
        }
        if(curr == null) curr = new ListNode(1);
        else curr.val +=1;

        return reverse(reversed);
    }

    public ListNode reverse(ListNode head){
        ListNode prev = null;
        while(head!= null){
            ListNode next = head.next;
            head.next = prev;
            prev = head;
            head = next;
        }
        return prev;
    }
}