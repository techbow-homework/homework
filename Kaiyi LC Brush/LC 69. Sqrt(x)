class Solution {
    public int mySqrt(int x) {
        //corner case
        if(x <= 1) return x;

        /*//inverse binary search;
        long right = 1;
        while(right * right < x){
            right = right << 1;
        }
        if(right * right == x) return (int)right;
        long left = right / 2;
        while(left <= right){
            long mid = left + (right - left) / 2;
            if(mid * mid < x) left = mid + 1;
            else if(mid * mid > x) right = mid - 1;
            else return (int)mid;
        }
        return (int)right;*/

        //newton's method
        int res = x / 2;
        double f0 = x / 2.0;
        double f1 =(x / f0 + f0) / 2;

        while(Math.abs(f0 - f1) > 0.1){
            f0 = f1;
            f1 = (x / f0 + f0) / 2;
        }
        return (int)f1;
    }
}