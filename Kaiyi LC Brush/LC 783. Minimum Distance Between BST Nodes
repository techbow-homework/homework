/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private TreeNode prev;
    private int minDistance = Integer.MAX_VALUE;
    public int minDiffInBST(TreeNode root) {//inorder traversal and keep recording the previous node
        //base case
        if(root == null) return -1;
        minDiffInBST(root.left);
        //do something
        if(prev !=null){
            minDistance = Math.min(minDistance, root.val - prev.val);
        }
        prev = root;
        minDiffInBST(root.right);
        return minDistance;
    }
}