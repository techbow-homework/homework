
class MyLinkedList {
    class ListNode{
        int val;
        ListNode next;
        public ListNode(){}
        public ListNode(int val){
            this.val = val;
        }
        public ListNode(int val, ListNode next){
            this.next = next;
            this.val = val;
        }
    }
    private int size;
    private ListNode dummy;
    public MyLinkedList() {
        size = 0;
        dummy = new ListNode();
    }

    public int get(int index) {
        if(index + 1 > size) return -1;
        ListNode curr = dummy;
        for(int i = 0 ; i < index; i++){
            curr = curr.next;
        }
        return curr.next.val;
    }

    public void addAtHead(int val) {
        ListNode newHead = new ListNode(val);
        newHead.next = dummy.next;
        dummy.next = newHead;
        size++;
    }

    public void addAtTail(int val) {
        ListNode curr = dummy;
        while(curr.next != null){
            curr = curr.next;
        }
        curr.next = new ListNode(val);
        size++;
    }

    public void addAtIndex(int index, int val) {
        if(index > size) return;//notice here is index > size, not index + 1 > size, cause if index = size, it is still addible
        ListNode curr = dummy;
        for(int i = 0 ; i < index; i++){
            curr = curr.next;
        }
        ListNode next= curr.next;
        ListNode newNode = new ListNode(val);
        newNode.next = next;
        curr.next = newNode;
        size++;
    }

    public void deleteAtIndex(int index) {
        if(index + 1 > size) return;
        ListNode curr = dummy;
        for(int i = 0 ; i < index; i++){
            curr = curr.next;
        }
        curr.next = curr.next.next;

        size--;
    }
}

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList obj = new MyLinkedList();
 * int param_1 = obj.get(index);
 * obj.addAtHead(val);
 * obj.addAtTail(val);
 * obj.addAtIndex(index,val);
 * obj.deleteAtIndex(index);
 */