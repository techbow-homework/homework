class Solution {
    public String minWindow(String s, String t) {//use two pointers to do the sliding window
        //corner case
        if(s.length() < t.length()) return "";
        //declare variable
        HashMap<Character, Integer> tcount = new HashMap<>();
        for(int i = 0; i < t.length(); i++){
            tcount.put(t.charAt(i), tcount.getOrDefault(t.charAt(i), 0) + 1);
        }
        int required = tcount.size();
        int formed = 0;
        int l = 0, r = s.length() + 1;
        int left = 0, right = 0;
        while(left < s.length() && !tcount.containsKey(s.charAt(left))) left++;
        right = left;
        HashMap<Character, Integer> scount = new HashMap<>();
        while(left < s.length() && right < s.length()){
            if(tcount.containsKey(s.charAt(right))){
                scount.put(s.charAt(right), scount.getOrDefault(s.charAt(right), 0) + 1);
                if(scount.get(s.charAt(right)).intValue()  == tcount.get(s.charAt(right)).intValue() ) formed++;
            }


            while(formed == required && left <= right){
                if( r - l  > right - left){
                    r = right;
                    l = left;
                }
                if(scount.containsKey(s.charAt(left))){
                    scount.put(s.charAt(left), scount.get(s.charAt(left)) - 1);
                    if(scount.get(s.charAt(left)).intValue()  < tcount.get(s.charAt(left)).intValue() ) formed--;
                }

                left++;
            }
            right++;
        }
        return r - l > s.length() ? "":s.substring(l, r  + 1);
    }

}