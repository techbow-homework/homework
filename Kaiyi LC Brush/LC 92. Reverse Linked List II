/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        //corner case
        if(head == null || head.next == null|| left == right) return head;

        ListNode dummy = new ListNode(0, head), prev = dummy, rightNode = dummy;
        for(int i = 1; i < left; i++){
            prev = prev.next;
        }
        for(int i = 1; i <= right; i++){
            rightNode = rightNode.next;
        }
        ListNode curr = prev.next, tail = rightNode.next;
        for(int i = left; i<=right; i++){
            prev.next = curr.next;
            curr.next = tail;
            tail =  curr;
            curr = prev.next;
        }
        prev.next = tail;
        return dummy.next;
    }
}