class Solution {
    public int maximalSquare(char[][] matrix) {
        if(matrix == null || matrix.length == 0 || matrix[0] == null||matrix[0].length ==0) return 0;
        int m = matrix.length;
        int n = matrix[0].length;
        int[][] dp = new int[m][n];
        int maxsqlen = 0;
        for(int i = 0; i < m ; i++){
            for(int j = 0; j < n; j++){
                if((i == 0 || j == 0) && matrix[i][j] == '1') dp[i][j] = 1;//|| vs &&, && is evaluated first
                else if(matrix[i][j] == '1'){
                    dp[i][j] = Math.min(dp[i- 1][j],Math.min(dp[i- 1][j -1], dp[i][j -1])) + 1;
                }
                maxsqlen =  Math.max(maxsqlen, dp[i][j] );
            }
        }
        return maxsqlen*maxsqlen;
    }
}