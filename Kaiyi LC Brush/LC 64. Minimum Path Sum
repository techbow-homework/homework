class Solution {
    public int minPathSum(int[][] grid) {
        //corner case
        if(grid == null || grid.length == 0|| grid[0] == null|| grid[0].length ==0) return 0;
        int m = grid.length;
        int n = grid[0].length;

        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(i == 0 || j== 0) {
                    if(i == 0 && j== 0)continue;
                    else if(i == 0) grid[i][j] = grid[i][j - 1] + grid[i][j];
                    else grid[i][j] = grid[i - 1][j] + grid[i][j];
                }else{
                    grid[i][j] = Math.min(grid[i - 1][j], grid[i][j - 1]) + grid[i][j];
                }
            }
        }
        return grid[m - 1][n - 1];
    }
}