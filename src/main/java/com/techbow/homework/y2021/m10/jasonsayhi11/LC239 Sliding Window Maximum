class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        if (nums == null || nums.length == 0) {
            return null;
        }
        int n = nums.length;
        int[] res = new int[n - k  + 1];
        int ri = 0;
        Deque<Integer> q = new ArrayDeque<>();

        for (int i = 0; i < n; i++) {
            if (!q.isEmpty() && q.peekFirst() < i - k + 1) {
                q.pollFirst();
            }

            while (!q.isEmpty() && nums[q.peekLast()] < nums[i]) {
                q.pollLast();
            }

            q.add(i);

            if (i >= k - 1) {
                res[ri++] = nums[q.peek()];
            }
        }

        return res;
    }
}